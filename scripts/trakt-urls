#!/usr/bin/env python3

import json
from pathlib import Path
from typing import Iterator, Optional

import click
from traktexport.dal import _parse_history, HistoryEntry


def parse_file(path: Path) -> Iterator[HistoryEntry]:
    data = json.loads(path.read_text())
    if "history" not in data:
        raise ValueError("Invalid file")
    hist = data["history"]
    yield from _parse_history(hist)


@click.command()
@click.option(
    "-t",
    "--trakt-username",
    default=None,
    envvar="TRAKT_USERNAME",
    help="Trakt username, to request first page of history",
)
def main(trakt_username: Optional[str]) -> None:
    # TODO: let user customize location?
    from my.utils.backup_to.__main__ import get_dir

    # parse using ~/data/trakt local data
    files = list(get_dir("trakt").rglob("*.json"))
    files.sort(key=lambda f: f.stat().st_size)

    emitted = set()
    for f in files:
        for e in parse_file(f):
            u = e.media_data.url
            if u in emitted:
                continue
            click.echo(u)

    # fetch first page of history from trakt
    if trakt_username is not None:
        from traktexport.export import _trakt_paginate

        try:
            data = list(
                _trakt_paginate(f"users/{trakt_username}/history", request_pages=1)
            )
        except Exception as e:
            click.echo(f"Error fetching history: {e}", err=True)
            return

        for e in _parse_history(data):
            u = e.media_data.url
            if u in emitted:
                continue
            click.echo(u)


if __name__ == "__main__":
    main()
